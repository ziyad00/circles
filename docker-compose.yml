version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: circles_postgres
    environment:
      POSTGRES_DB: circles
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: circles_app
    ports:
      - "8000:8000"
    environment:
      - APP_DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/circles
      - APP_DEBUG=true
      - APP_OTP_SECRET_KEY=dev-secret-key-change-in-production
      - APP_JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
      - APP_STORAGE_BACKEND=local
      - APP_CHECKIN_ENFORCE_PROXIMITY=false
      - APP_USE_POSTGIS=false
      - APP_METRICS_TOKEN=dev-metrics-token
    volumes:
      - ./media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        uv run alembic upgrade heads &&
        echo 'Starting app...' &&
        uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
