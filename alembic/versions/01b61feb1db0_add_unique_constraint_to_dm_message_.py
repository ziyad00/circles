"""add_unique_constraint_to_dm_message_likes

Revision ID: 01b61feb1db0
Revises: add_foursquare_discovery_fields
Create Date: 2025-08-24 06:28:06.951361

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01b61feb1db0'
down_revision = 'add_foursquare_discovery_fields'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('places', 'place_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index(op.f('idx_places_categories'), table_name='places', postgresql_using='gin')
    op.drop_index(op.f('idx_places_coordinates'), table_name='places')
    op.drop_index(op.f('idx_places_external_id'), table_name='places')
    op.drop_index(op.f('idx_places_name'), table_name='places', postgresql_using='gin')
    op.drop_index(op.f('ix_places_seed_source'), table_name='places')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_places_seed_source'), 'places', ['seed_source'], unique=False)
    op.create_index(op.f('idx_places_name'), 'places', [sa.literal_column("to_tsvector('english'::regconfig, name::text)")], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_places_external_id'), 'places', ['external_id', 'data_source'], unique=False)
    op.create_index(op.f('idx_places_coordinates'), 'places', ['latitude', 'longitude'], unique=False)
    op.create_index(op.f('idx_places_categories'), 'places', [sa.literal_column("to_tsvector('english'::regconfig, categories::text)")], unique=False, postgresql_using='gin')
    op.alter_column('places', 'place_metadata',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###
